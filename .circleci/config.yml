version: 2.1

executors:
  executor-linux-x64:
    docker:
      - image: circleci/node:latest

jobs:
  setup-linux-x64:
    executor: executor-linux-x64
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Pull Submodules
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Install NPM packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - .

  test-linux-x64:
    executor: executor-linux-x64
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Quasar
          command: sudo npm install -g @quasar/cli
      - run:
          name: Unit Tests
          command: quasar test --unit jest
      - store_test_results:
          path: ./test/jest/coverage
      - persist_to_workspace:
          root: .
          paths:
            - .

  build-linux-x64:
    executor: executor-linux-x64
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Wine
          command: |
            sudo apk update
            sudo apk add wine
      - run:
          name: Install Protoc
          command: |
            PROTOC_VERSION=3.11.2
            wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.2/protoc-${PROTOC_VERSION}-linux-x86_64.zip
            unzip protoc*.zip
            sudo mv bin/protoc /usr/local/bin/
      - run:
          name: Generate Protobuffers
          command: bash generate_protobufs.sh
      - run:
          name: Install Quasar
          command: sudo npm install -g @quasar/cli
      - run:
          name: Build Application
          command: quasar build -m electron -b builder -T all
      - store_artifacts:
          path: ./dist/electron/ircash-linux-x64
          destination: binaries
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/electron/ircash-linux-x64

  publish-github:
      docker:
        - image: cibuilds/github:0.10
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Package Binaries
            command: |
              VERSION=$(grep -o '"version": "[^"]*' package.json | grep -o '[^"]*$')
              mkdir packages
              cd packages
              tar -zcvf ircash-${VERSION}-darwin-x64.tar.gz ../dist/electron/ircash-darwin-x64
              zip -r ircash-${VERSION}-darwin-x64.zip ../dist/electron/ircash-darwin-x64
              tar -zcvf ircash-${VERSION}-linux-x64.tar.gz ../dist/electron/ircash-darwin-x64
              zip -r ircash-${VERSION}-linux-x64.zip ../dist/electron/ircash-linux-x64
              tar -zcvf ircash-${VERSION}-mas-x64.tar.gz ../dist/electron/ircash-mas-x64
              zip -r ircash-${VERSION}-mas-x64.zip ../dist/electron/ircash-mas-x64
              tar -zcvf ircash-${VERSION}-mas-x64.tar.gz ../dist/electron/ircash-mas-x64
              zip -r ircash-${VERSION}-mas-x64.zip ../dist/electron/ircash-mas-x64
              tar -zcvf ircash-${VERSION}-win-x64.tar.gz ../dist/electron/ircash-win
              zip -r ircash-${VERSION}-win-x64.zip ../dist/electron/ircash-win
        - run:
            name: Publish Release on GitHub
            command: |
              VERSION=$(grep -o '"version": "[^"]*' package.json | grep -o '[^"]*$')
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -draft -delete ${VERSION} ./packages

workflows:
  version: 2
  untagged:
    jobs:
      - setup-linux-x64
      - test-linux-x64:
          requires:
            - setup-linux-x64
      - build-linux-x64:
          requires:
            - setup-linux-x64
      - publish-github:
          requires:
            - build-linux-x64
